name: Deploy to EC2

on:
  push:
    branches: [ "main" ]  # Adjust this to your main branch name
  workflow_dispatch:      # Allows manual trigger

env:
  NODE_VERSION: '18'     # Match your Node.js version

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create .env file
      run: |
        echo "PORT=${{ secrets.PORT }}" >> .env
        # Add other environment variables as needed
    
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
    
    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      run: |
        # Create deployment script
        echo '#!/bin/bash
        
        # Stop existing application
        pm2 stop app || true
        
        # Navigate to app directory
        cd ~/app
        
        # Remove old files except .env
        find . -not -name ".env" -delete
        
        # Copy new files
        rsync -av --progress \
          -e "ssh -i ~/.ssh/deploy_key" \
          --exclude=".git" \
          --exclude="node_modules" \
          --exclude=".env" \
          ./ ${EC2_USERNAME}@${EC2_HOST}:~/app/
        
        # SSH into instance and update application
        ssh -i ~/.ssh/deploy_key ${EC2_USERNAME}@${EC2_HOST} "cd ~/app && \
          npm ci && \
          pm2 start src/app.js --name app || pm2 restart app"' > deploy.sh
        
        chmod +x deploy.sh
        ./deploy.sh